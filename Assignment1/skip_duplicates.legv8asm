

skip_duplicates:
//X0 = a[]
//X1 = start
//X2 = value
//X10 = index
ADDI X1, XZR, #1 //for test
ADDI X2, XZR, #5 //for test

ADD X10, XZR, X1 // index = start
ADD X13, XZR, X2 // X13 = value

top_of_skip_dup:
LSL X11, X10, #3 //convert index to offset
ADD X11, X0, X11 //$a[index]
LDUR X12, [X11, #0] //X12 = a[index]

//for test
//PRNT X13
//PRNT X12

SUBS X14, X13, X12  //value - a[index]
CBNZ X14, found_index //if not equal, then branch to found index

ADDI X10, X10, #1 //index++
B top_of_skip_dup


found_index:
PRNT X10 
ADD X1, XZR, XZR
ADD X2, XZR, XZR